// This style will be applied in firefox while the supports feature query will kick in if clip-path is a supported property by the broswer
.header {
  height: 85vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url(../img/hero-small.jpg);
  background-size: cover;
  background-position: top;
  position: relative;

  // Fix for clip-path not working in Firefox
  @supports (clip-path: polyon(0 0)) or (-webkit-clip-path: polygon(0 0)) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  // Media queries for responsive images

  // This sets a better quality picture on a screen with higher dpi/resolution
  // @media (min-resolution: 192dpi) {
  //   background-image: linear-gradient(
  //     to right bottom,
  //     rgba($color-primary-light, 0.8),
  //     rgba($color-primary-dark, 0.8)
  //   ),
  //   url(../img/hero.jpg);
  // }

  // Adding a condition to check for the width of the screen before setting the image
  @media only screen and (min-resolution: 192dpi) and (min-width: 37.5em),
    (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
    (min-width: 125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-secondary-light, 0.8),
        rgba($color-secondary-dark, 0.8)
      ),
      url(../img/hero.jpg);
  }

  // // Targetting a particular screen size before setting the image
  // @media (min-width: 2000px) {
  //   background-image: linear-gradient(
  //       to right bottom,
  //       rgba($color-secondary-light, 0.8),
  //       rgba($color-secondary-dark, 0.8)
  //     ),
  //     url(../img/hero.jpg);
  // }

  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    /* top: 40px; */
    top: 4rem;
    /* left: 40px; */
    left: 4rem;
  }

  &__logo {
    /* The width would be sorted by the browser */
    /* height: 35px; */
    height: 3.5rem;
  }

  &__text-box {
    /* The position, top and left properties are dependent on the parent element */
    position: absolute;
    top: 40%;
    left: 50%;
    /* However, because what we want is to center the text box properly on the page, we use the transform property along with translate, this is totally independent on the parent elements but only on the element's position. */
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
